
This Document is about merging gui with internal classes(Tracker), follow these steps to combine gui and logic.

1) Start of an exercise: There are two different options

	You can restore your saved Data. 
	1.1: Search in your Profile.profileStats object your exercise name and get the tracker of it.
		Every Tracker has 3 Stages. You can get the old, saved code by your tracker object with: Tracker.stageGreen.getLatestCodeStamp()
		Do this for every 3 Stages.
		In your CodeStamps are CompilationUnit(VirtualKata). You can get the old code with these Units as a String..

	You can start a new Session
	1.2: Simply create a new Tracker

2)Now you can begin coding.(Tracker tracker; (example object))

	Every time you acces  a different stage(StageRed, StageGreen, StageRefactor) you have to do these steps:

	You entered a new stage:
	Code this: tracker.stageRed.startTimeTracking();

	Before going to a new Stage;
	JavaStringCompiler(Virtualkata) compiler;

	Code this: tracker.stageRed.stopTimeTracking();
	stageRed.codeStampCollection.addCodeStemp(GenerateCodeStamp.generate(compiler));



	Every time user wants to compile his code:
	JavaStringCompiler(Virtualkata) compiler;
	Code this: tracker.stageRed.codeStampCollection.addCodeStemp(GenerateCodeStamp.generate(compiler));
 
	
	(stageRed is only an example and is vicarious for all stages)

3) User wants to exit the program or mastered the exercise
	JavaStringCompiler(Virtualkata) compiler;

	3.1) User mastered the exercise

		Code this: tracker.stageRefactor.stopTimeTracking();
			   tracker.stageRefactor.codeStampCollection.addCodeStemp(GenerateCodeStamp.generate(compiler));
			   AnalyzedTrackingData data = new AnalyzedTrackingData(tracker, "exerciseName");

		now add your AnalyzedTrackingData Object to your profile:
		Code this: profile.profileStats.addTrackingData(data);
			   profile.profileStats.addExercise(tracker, "exerciseName", true)

	3.2) User wants to leave 
	JavaStringCompiler(Virtualkata) compiler;

	Code This: tracker.stageRed.stopTimeTracking();
		   tracker.stageRefactor.codeStampCollection.addCodeStemp(GenerateCodeStamp.generate(compiler)); 
		   profile.profileStats.addExercise(tracker, "exerciseName", false);

	(stageRed is only an example and is vicarious for all stages)



mission accomplished!!!


